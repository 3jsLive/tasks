[{"type":"CodeTag","code":"\n\t\tvar geometry = new THREE.BufferGeometry();\n\t\t// create a simple square shape. We duplicate the top left and bottom right\n\t\t// vertices because each vertex needs to appear once per triangle.\n\t\tvar vertices = new Float32Array( [\n\t\t\t-1.0, -1.0,  1.0,\n\t\t\t 1.0, -1.0,  1.0,\n\t\t\t 1.0,  1.0,  1.0,\n\n\t\t\t 1.0,  1.0,  1.0,\n\t\t\t-1.0,  1.0,  1.0,\n\t\t\t-1.0, -1.0,  1.0\n\t\t] );\n\n\t\t// itemSize = 3 because there are 3 values (components) per vertex\n\t\tgeometry.addAttribute( 'position', new THREE.BufferAttribute( vertices, 3 ) );\n\t\tvar material = new THREE.MeshBasicMaterial( { color: 0xff0000 } );\n\t\tvar mesh = new THREE.Mesh( geometry, material );\n\t\t","location":{"start":{"offset":731,"line":26,"column":3},"end":{"offset":1380,"line":44,"column":10}}},{"type":"CodeTag","code":"\n\t\t\t\t{ start: 0, count: Infinity }\n\t\t\t","location":{"start":{"offset":4684,"line":125,"column":4},"end":{"offset":4735,"line":127,"column":11}}},{"type":"CodeTag","code":"{ start: Integer, count: Integer, materialIndex: Integer }","location":{"start":{"offset":5011,"line":136,"column":4},"end":{"offset":5082,"line":136,"column":75}}}]